<?xml version="1.0" encoding="utf-8"?>
<edmx:Edmx Version="3.0" xmlns:edmx="http://schemas.microsoft.com/ado/2009/11/edmx">
  <!-- EF Runtime content -->
  <edmx:Runtime>
    <!-- SSDL content -->
    <edmx:StorageModels>
    <Schema Namespace="BlogAngularModel.Store" Alias="Self" Provider="System.Data.SqlClient" ProviderManifestToken="2008" xmlns:store="http://schemas.microsoft.com/ado/2007/12/edm/EntityStoreSchemaGenerator" xmlns="http://schemas.microsoft.com/ado/2009/11/edm/ssdl">
        <EntityContainer Name="BlogAngularModelStoreContainer">
          <EntitySet Name="Category" EntityType="BlogAngularModel.Store.Category" store:Type="Tables" Schema="dbo" />
          <EntitySet Name="ChatMessage" EntityType="BlogAngularModel.Store.ChatMessage" store:Type="Tables" Schema="dbo" />
          <EntitySet Name="Comment" EntityType="BlogAngularModel.Store.Comment" store:Type="Tables" Schema="dbo" />
          <EntitySet Name="Post" EntityType="BlogAngularModel.Store.Post" store:Type="Tables" Schema="dbo" />
          <EntitySet Name="Rol" EntityType="BlogAngularModel.Store.Rol" store:Type="Tables" Schema="dbo" />
          <EntitySet Name="Token" EntityType="BlogAngularModel.Store.Token" store:Type="Tables" Schema="dbo" />
          <EntitySet Name="User" EntityType="BlogAngularModel.Store.User" store:Type="Tables" Schema="dbo" />
          <EntitySet Name="UserRoles" EntityType="BlogAngularModel.Store.UserRoles" store:Type="Tables" Schema="dbo" />
          <AssociationSet Name="FK_ChatMessage_User" Association="BlogAngularModel.Store.FK_ChatMessage_User">
            <End Role="User" EntitySet="User" />
            <End Role="ChatMessage" EntitySet="ChatMessage" />
          </AssociationSet>
          <AssociationSet Name="FK_Comment_Post" Association="BlogAngularModel.Store.FK_Comment_Post">
            <End Role="Post" EntitySet="Post" />
            <End Role="Comment" EntitySet="Comment" />
          </AssociationSet>
          <AssociationSet Name="FK_Post_Category" Association="BlogAngularModel.Store.FK_Post_Category">
            <End Role="Category" EntitySet="Category" />
            <End Role="Post" EntitySet="Post" />
          </AssociationSet>
          <AssociationSet Name="FK_Post_User" Association="BlogAngularModel.Store.FK_Post_User">
            <End Role="User" EntitySet="User" />
            <End Role="Post" EntitySet="Post" />
          </AssociationSet>
          <AssociationSet Name="FK_Token_User" Association="BlogAngularModel.Store.FK_Token_User">
            <End Role="User" EntitySet="User" />
            <End Role="Token" EntitySet="Token" />
          </AssociationSet>
          <AssociationSet Name="FK_UserRoles_Rol" Association="BlogAngularModel.Store.FK_UserRoles_Rol">
            <End Role="Rol" EntitySet="Rol" />
            <End Role="UserRoles" EntitySet="UserRoles" />
          </AssociationSet>
          <AssociationSet Name="FK_UserRoles_User" Association="BlogAngularModel.Store.FK_UserRoles_User">
            <End Role="User" EntitySet="User" />
            <End Role="UserRoles" EntitySet="UserRoles" />
          </AssociationSet>
        </EntityContainer>
        <EntityType Name="Category">
          <Key>
            <PropertyRef Name="id" />
          </Key>
          <Property Name="id" Type="int" Nullable="false" StoreGeneratedPattern="Identity" />
          <Property Name="category" Type="nvarchar" Nullable="false" MaxLength="50" />
        </EntityType>
        <EntityType Name="ChatMessage">
          <Key>
            <PropertyRef Name="uid" />
          </Key>
          <Property Name="UserId" Type="int" Nullable="false" />
          <Property Name="Message" Type="nvarchar" Nullable="false" MaxLength="300" />
          <Property Name="Created" Type="datetime" Nullable="false" />
          <Property Name="uid" Type="uniqueidentifier" Nullable="false" />
        </EntityType>
        <EntityType Name="Comment">
          <Key>
            <PropertyRef Name="id" />
          </Key>
          <Property Name="id" Type="int" Nullable="false" StoreGeneratedPattern="Identity" />
          <Property Name="idPost" Type="int" Nullable="false" />
          <Property Name="idUser" Type="int" Nullable="false" />
          <Property Name="comment" Type="nvarchar" Nullable="false" MaxLength="140" />
        </EntityType>
        <EntityType Name="Post">
          <Key>
            <PropertyRef Name="id" />
          </Key>
          <Property Name="id" Type="int" Nullable="false" StoreGeneratedPattern="Identity" />
          <Property Name="idUser" Type="int" Nullable="false" />
          <Property Name="idCategory" Type="int" Nullable="false" />
          <Property Name="synopsis" Type="nvarchar" Nullable="false" MaxLength="300" />
          <Property Name="postContent" Type="text" Nullable="false" />
          <Property Name="created" Type="smalldatetime" Nullable="false" />
          <Property Name="title" Type="nvarchar" Nullable="false" MaxLength="100" />
        </EntityType>
        <EntityType Name="Rol">
          <Key>
            <PropertyRef Name="id" />
          </Key>
          <Property Name="id" Type="int" Nullable="false" StoreGeneratedPattern="Identity" />
          <Property Name="rolname" Type="nvarchar" Nullable="false" MaxLength="50" />
          <Property Name="lvl" Type="int" Nullable="false" />
        </EntityType>
        <EntityType Name="Token">
          <Key>
            <PropertyRef Name="token" />
          </Key>
          <Property Name="token" Type="nchar" Nullable="false" MaxLength="36" />
          <Property Name="expires" Type="smalldatetime" Nullable="false" />
          <Property Name="userId" Type="int" Nullable="false" />
        </EntityType>
        <EntityType Name="User">
          <Key>
            <PropertyRef Name="id" />
          </Key>
          <Property Name="id" Type="int" Nullable="false" StoreGeneratedPattern="Identity" />
          <Property Name="username" Type="nvarchar" Nullable="false" MaxLength="50" />
          <Property Name="salt" Type="nchar" Nullable="false" MaxLength="20" />
          <Property Name="password" Type="nchar" Nullable="false" MaxLength="64" />
          <Property Name="created" Type="smalldatetime" Nullable="false" />
          <Property Name="avatar" Type="nvarchar" Nullable="false" MaxLength="60" />
          <Property Name="active" Type="tinyint" Nullable="false" />
        </EntityType>
        <EntityType Name="UserRoles">
          <Key>
            <PropertyRef Name="idUser" />
            <PropertyRef Name="idRol" />
          </Key>
          <Property Name="idUser" Type="int" Nullable="false" />
          <Property Name="idRol" Type="int" Nullable="false" />
        </EntityType>
        <Association Name="FK_ChatMessage_User">
          <End Role="User" Type="BlogAngularModel.Store.User" Multiplicity="1">
            <OnDelete Action="Cascade" />
          </End>
          <End Role="ChatMessage" Type="BlogAngularModel.Store.ChatMessage" Multiplicity="*" />
          <ReferentialConstraint>
            <Principal Role="User">
              <PropertyRef Name="id" />
            </Principal>
            <Dependent Role="ChatMessage">
              <PropertyRef Name="UserId" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <Association Name="FK_Comment_Post">
          <End Role="Post" Type="BlogAngularModel.Store.Post" Multiplicity="1">
            <OnDelete Action="Cascade" />
          </End>
          <End Role="Comment" Type="BlogAngularModel.Store.Comment" Multiplicity="*" />
          <ReferentialConstraint>
            <Principal Role="Post">
              <PropertyRef Name="id" />
            </Principal>
            <Dependent Role="Comment">
              <PropertyRef Name="idPost" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <Association Name="FK_Post_Category">
          <End Role="Category" Type="BlogAngularModel.Store.Category" Multiplicity="1">
            <OnDelete Action="Cascade" />
          </End>
          <End Role="Post" Type="BlogAngularModel.Store.Post" Multiplicity="*" />
          <ReferentialConstraint>
            <Principal Role="Category">
              <PropertyRef Name="id" />
            </Principal>
            <Dependent Role="Post">
              <PropertyRef Name="idCategory" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <Association Name="FK_Post_User">
          <End Role="User" Type="BlogAngularModel.Store.User" Multiplicity="1">
            <OnDelete Action="Cascade" />
          </End>
          <End Role="Post" Type="BlogAngularModel.Store.Post" Multiplicity="*" />
          <ReferentialConstraint>
            <Principal Role="User">
              <PropertyRef Name="id" />
            </Principal>
            <Dependent Role="Post">
              <PropertyRef Name="idUser" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <Association Name="FK_Token_User">
          <End Role="User" Type="BlogAngularModel.Store.User" Multiplicity="1">
            <OnDelete Action="Cascade" />
          </End>
          <End Role="Token" Type="BlogAngularModel.Store.Token" Multiplicity="*" />
          <ReferentialConstraint>
            <Principal Role="User">
              <PropertyRef Name="id" />
            </Principal>
            <Dependent Role="Token">
              <PropertyRef Name="userId" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <Association Name="FK_UserRoles_Rol">
          <End Role="Rol" Type="BlogAngularModel.Store.Rol" Multiplicity="1">
            <OnDelete Action="Cascade" />
          </End>
          <End Role="UserRoles" Type="BlogAngularModel.Store.UserRoles" Multiplicity="*" />
          <ReferentialConstraint>
            <Principal Role="Rol">
              <PropertyRef Name="id" />
            </Principal>
            <Dependent Role="UserRoles">
              <PropertyRef Name="idRol" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <Association Name="FK_UserRoles_User">
          <End Role="User" Type="BlogAngularModel.Store.User" Multiplicity="1">
            <OnDelete Action="Cascade" />
          </End>
          <End Role="UserRoles" Type="BlogAngularModel.Store.UserRoles" Multiplicity="*" />
          <ReferentialConstraint>
            <Principal Role="User">
              <PropertyRef Name="id" />
            </Principal>
            <Dependent Role="UserRoles">
              <PropertyRef Name="idUser" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
      </Schema></edmx:StorageModels>
    <!-- CSDL content -->
    <edmx:ConceptualModels>
      <Schema Namespace="BlogAngularModel" Alias="Self" p1:UseStrongSpatialTypes="false" xmlns:annotation="http://schemas.microsoft.com/ado/2009/02/edm/annotation" xmlns:p1="http://schemas.microsoft.com/ado/2009/02/edm/annotation" xmlns="http://schemas.microsoft.com/ado/2009/11/edm">
        <EntityContainer Name="BlogAngularEntities" p1:LazyLoadingEnabled="true">
          <EntitySet Name="Category" EntityType="BlogAngularModel.Category" />
          <EntitySet Name="Comment" EntityType="BlogAngularModel.Comment" />
          <EntitySet Name="Post" EntityType="BlogAngularModel.Post" />
          <EntitySet Name="Rol" EntityType="BlogAngularModel.Rol" />
          <EntitySet Name="Token" EntityType="BlogAngularModel.Token" />
          <EntitySet Name="User" EntityType="BlogAngularModel.User" />
          <AssociationSet Name="FK_Post_Category" Association="BlogAngularModel.FK_Post_Category">
            <End Role="Category" EntitySet="Category" />
            <End Role="Post" EntitySet="Post" />
          </AssociationSet>
          <AssociationSet Name="FK_Comment_Post" Association="BlogAngularModel.FK_Comment_Post">
            <End Role="Post" EntitySet="Post" />
            <End Role="Comment" EntitySet="Comment" />
          </AssociationSet>
          <AssociationSet Name="FK_Post_User" Association="BlogAngularModel.FK_Post_User">
            <End Role="User" EntitySet="User" />
            <End Role="Post" EntitySet="Post" />
          </AssociationSet>
          <AssociationSet Name="FK_Token_User" Association="BlogAngularModel.FK_Token_User">
            <End Role="User" EntitySet="User" />
            <End Role="Token" EntitySet="Token" />
          </AssociationSet>
          <AssociationSet Name="UserRoles" Association="BlogAngularModel.UserRoles">
            <End Role="Rol" EntitySet="Rol" />
            <End Role="User" EntitySet="User" />
          </AssociationSet>
          <EntitySet Name="ChatMessage" EntityType="BlogAngularModel.ChatMessage" />
          <AssociationSet Name="FK_ChatMessage_User" Association="BlogAngularModel.FK_ChatMessage_User">
            <End Role="User" EntitySet="User" />
            <End Role="ChatMessage" EntitySet="ChatMessage" />
          </AssociationSet>
        </EntityContainer>
        <EntityType Name="Category">
          <Key>
            <PropertyRef Name="id" />
          </Key>
          <Property Name="id" Type="Int32" Nullable="false" p1:StoreGeneratedPattern="Identity" />
          <Property Name="category1" Type="String" Nullable="false" MaxLength="50" Unicode="true" FixedLength="false" />
        </EntityType>
        <EntityType Name="Comment">
          <Key>
            <PropertyRef Name="id" />
          </Key>
          <Property Name="id" Type="Int32" Nullable="false" p1:StoreGeneratedPattern="Identity" />
          <Property Name="idPost" Type="Int32" Nullable="false" />
          <Property Name="idUser" Type="Int32" Nullable="false" />
          <Property Name="comment1" Type="String" Nullable="false" MaxLength="140" Unicode="true" FixedLength="false" />
        </EntityType>
        <EntityType Name="Post">
          <Key>
            <PropertyRef Name="id" />
          </Key>
          <Property Name="id" Type="Int32" Nullable="false" p1:StoreGeneratedPattern="Identity" />
          <Property Name="idUser" Type="Int32" Nullable="false" />
          <Property Name="idCategory" Type="Int32" Nullable="false" />
          <Property Name="synopsis" Type="String" Nullable="false" MaxLength="300" Unicode="true" FixedLength="false" />
          <Property Name="postContent" Type="String" Nullable="false" MaxLength="Max" Unicode="false" FixedLength="false" />
          <Property Name="created" Type="DateTime" Nullable="false" Precision="0" />
          <NavigationProperty Name="Category" Relationship="BlogAngularModel.FK_Post_Category" FromRole="Post" ToRole="Category" />
          <Property Type="String" Name="title" Nullable="false" MaxLength="100" FixedLength="false" Unicode="true" />
        </EntityType>
        <EntityType Name="Rol">
          <Key>
            <PropertyRef Name="id" />
          </Key>
          <Property Name="id" Type="Int32" Nullable="false" p1:StoreGeneratedPattern="Identity" />
          <Property Name="rolname" Type="String" Nullable="false" MaxLength="50" Unicode="true" FixedLength="false" />
          <Property Type="Int32" Name="lvl" Nullable="false" />
        </EntityType>
        <EntityType Name="Token">
          <Key>
            <PropertyRef Name="token1" />
          </Key>
          <Property Name="token1" Type="String" Nullable="false" MaxLength="36" Unicode="true" FixedLength="true" />
          <Property Name="expires" Type="DateTime" Nullable="false" Precision="0" />
          <Property Name="userId" Type="Int32" Nullable="false" />
        </EntityType>
        <EntityType Name="User">
          <Key>
            <PropertyRef Name="id" />
          </Key>
          <Property Name="id" Type="Int32" Nullable="false" p1:StoreGeneratedPattern="Identity" />
          <Property Name="username" Type="String" Nullable="false" MaxLength="50" Unicode="true" FixedLength="false" />
          <Property Name="salt" Type="String" Nullable="false" MaxLength="20" Unicode="true" FixedLength="true" />
          <Property Name="password" Type="String" Nullable="false" MaxLength="64" Unicode="true" FixedLength="true" />
          <Property Name="created" Type="DateTime" Nullable="false" Precision="0" />
          <Property Type="String" Name="avatar" Nullable="false" MaxLength="60" FixedLength="false" Unicode="true" />
          <Property Type="Byte" Name="active" Nullable="false" />
        </EntityType>
        <Association Name="FK_Post_Category">
          <End Role="Category" Type="BlogAngularModel.Category" Multiplicity="1">
            <OnDelete Action="Cascade" />
          </End>
          <End Role="Post" Type="BlogAngularModel.Post" Multiplicity="*" />
          <ReferentialConstraint>
            <Principal Role="Category">
              <PropertyRef Name="id" />
            </Principal>
            <Dependent Role="Post">
              <PropertyRef Name="idCategory" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <Association Name="FK_Comment_Post">
          <End Role="Post" Type="BlogAngularModel.Post" Multiplicity="1">
            <OnDelete Action="Cascade" />
          </End>
          <End Role="Comment" Type="BlogAngularModel.Comment" Multiplicity="*" />
          <ReferentialConstraint>
            <Principal Role="Post">
              <PropertyRef Name="id" />
            </Principal>
            <Dependent Role="Comment">
              <PropertyRef Name="idPost" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <Association Name="FK_Post_User">
          <End Role="User" Type="BlogAngularModel.User" Multiplicity="1">
            <OnDelete Action="Cascade" />
          </End>
          <End Role="Post" Type="BlogAngularModel.Post" Multiplicity="*" />
          <ReferentialConstraint>
            <Principal Role="User">
              <PropertyRef Name="id" />
            </Principal>
            <Dependent Role="Post">
              <PropertyRef Name="idUser" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <Association Name="FK_Token_User">
          <End Role="User" Type="BlogAngularModel.User" Multiplicity="1">
            <OnDelete Action="Cascade" />
          </End>
          <End Role="Token" Type="BlogAngularModel.Token" Multiplicity="*" />
          <ReferentialConstraint>
            <Principal Role="User">
              <PropertyRef Name="id" />
            </Principal>
            <Dependent Role="Token">
              <PropertyRef Name="userId" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
        <Association Name="UserRoles">
          <End Role="Rol" Type="BlogAngularModel.Rol" Multiplicity="*" />
          <End Role="User" Type="BlogAngularModel.User" Multiplicity="*" />
        </Association>
        <EntityType Name="ChatMessage">
          <Key>
            <PropertyRef Name="uid" />
          </Key>
          <Property Type="Int32" Name="UserId" Nullable="false" />
          <Property Type="String" Name="Message" Nullable="false" MaxLength="300" FixedLength="false" Unicode="true" />
          <Property Type="DateTime" Name="Created" Nullable="false" Precision="3" />
          <NavigationProperty Name="User" Relationship="BlogAngularModel.FK_ChatMessage_User" FromRole="ChatMessage" ToRole="User" />
          <Property Type="Guid" Name="uid" Nullable="false" />
        </EntityType>
        <Association Name="FK_ChatMessage_User">
          <End Type="BlogAngularModel.User" Role="User" Multiplicity="1">
            <OnDelete Action="Cascade" />
          </End>
          <End Type="BlogAngularModel.ChatMessage" Role="ChatMessage" Multiplicity="*" />
          <ReferentialConstraint>
            <Principal Role="User">
              <PropertyRef Name="id" />
            </Principal>
            <Dependent Role="ChatMessage">
              <PropertyRef Name="UserId" />
            </Dependent>
          </ReferentialConstraint>
        </Association>
      </Schema>
    </edmx:ConceptualModels>
    <!-- C-S mapping content -->
    <edmx:Mappings>
      <Mapping Space="C-S" xmlns="http://schemas.microsoft.com/ado/2009/11/mapping/cs">
        <EntityContainerMapping StorageEntityContainer="BlogAngularModelStoreContainer" CdmEntityContainer="BlogAngularEntities">
          <EntitySetMapping Name="Category">
            <EntityTypeMapping TypeName="BlogAngularModel.Category">
              <MappingFragment StoreEntitySet="Category">
                <ScalarProperty Name="id" ColumnName="id" />
                <ScalarProperty Name="category1" ColumnName="category" />
              </MappingFragment>
            </EntityTypeMapping>
          </EntitySetMapping>
          <EntitySetMapping Name="Comment">
            <EntityTypeMapping TypeName="BlogAngularModel.Comment">
              <MappingFragment StoreEntitySet="Comment">
                <ScalarProperty Name="id" ColumnName="id" />
                <ScalarProperty Name="idPost" ColumnName="idPost" />
                <ScalarProperty Name="idUser" ColumnName="idUser" />
                <ScalarProperty Name="comment1" ColumnName="comment" />
              </MappingFragment>
            </EntityTypeMapping>
          </EntitySetMapping>
          <EntitySetMapping Name="Post">
            <EntityTypeMapping TypeName="BlogAngularModel.Post">
              <MappingFragment StoreEntitySet="Post">
                <ScalarProperty Name="title" ColumnName="title" />
                <ScalarProperty Name="id" ColumnName="id" />
                <ScalarProperty Name="idUser" ColumnName="idUser" />
                <ScalarProperty Name="idCategory" ColumnName="idCategory" />
                <ScalarProperty Name="synopsis" ColumnName="synopsis" />
                <ScalarProperty Name="postContent" ColumnName="postContent" />
                <ScalarProperty Name="created" ColumnName="created" />
              </MappingFragment>
            </EntityTypeMapping>
          </EntitySetMapping>
          <EntitySetMapping Name="Rol">
            <EntityTypeMapping TypeName="BlogAngularModel.Rol">
              <MappingFragment StoreEntitySet="Rol">
                <ScalarProperty Name="lvl" ColumnName="lvl" />
                <ScalarProperty Name="id" ColumnName="id" />
                <ScalarProperty Name="rolname" ColumnName="rolname" />
              </MappingFragment>
            </EntityTypeMapping>
          </EntitySetMapping>
          <EntitySetMapping Name="Token">
            <EntityTypeMapping TypeName="BlogAngularModel.Token">
              <MappingFragment StoreEntitySet="Token">
                <ScalarProperty Name="token1" ColumnName="token" />
                <ScalarProperty Name="expires" ColumnName="expires" />
                <ScalarProperty Name="userId" ColumnName="userId" />
              </MappingFragment>
            </EntityTypeMapping>
          </EntitySetMapping>
          <EntitySetMapping Name="User">
            <EntityTypeMapping TypeName="BlogAngularModel.User">
              <MappingFragment StoreEntitySet="User">
                <ScalarProperty Name="active" ColumnName="active" />
                <ScalarProperty Name="avatar" ColumnName="avatar" />
                <ScalarProperty Name="id" ColumnName="id" />
                <ScalarProperty Name="username" ColumnName="username" />
                <ScalarProperty Name="salt" ColumnName="salt" />
                <ScalarProperty Name="password" ColumnName="password" />
                <ScalarProperty Name="created" ColumnName="created" />
              </MappingFragment>
            </EntityTypeMapping>
          </EntitySetMapping>
          <AssociationSetMapping Name="UserRoles" TypeName="BlogAngularModel.UserRoles" StoreEntitySet="UserRoles">
            <EndProperty Name="Rol">
              <ScalarProperty Name="id" ColumnName="idRol" />
            </EndProperty>
            <EndProperty Name="User">
              <ScalarProperty Name="id" ColumnName="idUser" />
            </EndProperty>
          </AssociationSetMapping>
          <EntitySetMapping Name="ChatMessage">
            <EntityTypeMapping TypeName="BlogAngularModel.ChatMessage">
              <MappingFragment StoreEntitySet="ChatMessage">
                <ScalarProperty Name="uid" ColumnName="uid" />
                <ScalarProperty Name="Created" ColumnName="Created" />
                <ScalarProperty Name="Message" ColumnName="Message" />
                <ScalarProperty Name="UserId" ColumnName="UserId" />
              </MappingFragment>
            </EntityTypeMapping>
          </EntitySetMapping>
        </EntityContainerMapping>
      </Mapping>
    </edmx:Mappings>
  </edmx:Runtime>
  <!-- EF Designer content (DO NOT EDIT MANUALLY BELOW HERE) -->
  <Designer xmlns="http://schemas.microsoft.com/ado/2009/11/edmx">
    <Connection>
      <DesignerInfoPropertySet>
        <DesignerProperty Name="MetadataArtifactProcessing" Value="EmbedInOutputAssembly" />
      </DesignerInfoPropertySet>
    </Connection>
    <Options>
      <DesignerInfoPropertySet>
        <DesignerProperty Name="ValidateOnBuild" Value="true" />
        <DesignerProperty Name="EnablePluralization" Value="False" />
        <DesignerProperty Name="IncludeForeignKeysInModel" Value="True" />
        <DesignerProperty Name="CodeGenerationStrategy" Value="Ninguno" />
      </DesignerInfoPropertySet>
    </Options>
    <!-- Diagram content (shape and connector positions) -->
    <Diagrams></Diagrams>
  </Designer>
</edmx:Edmx>